[{
  "projectId": "01",
  "projectName": "Event Planner & Participation System",
  "description": "A feature-rich event management web application enabling users to create, join, and manage both public and private events. The system supports role-based access, payment workflows, invitations, and participant approvals. Designed with a modern UI, it provides seamless interaction for admins, organizers, and attendees with secure authentication and scalable backend architecture.",
  "features": [
    "Role-Based Access Control: Admin and Regular Users with distinct permissions.",
    "Event Management: Create, update, delete, and view events with visibility options (public/private) and pricing models (free/paid).",
    "Secure Payment Integration: Seamless event fee collection using SSLCommerz.",
    "Participant Workflows: Join, request, or get invited to events with dynamic rules based on event type and access level.",
    "Invitation System: Send and manage invitations with support for both instant and payment-based joining.",
    "Admin Moderation Panel: Monitor and manage inappropriate content, users, and events with full access.",
    "Review & Rating: Post-event user reviews using React Rating component.",
    "Authentication System: Secure login with JWT and custom login flows for enhanced control.",
    "Cloud Image Uploads: Event images are managed using Cloudinary for reliability and performance.",
    "Responsive UI/UX: Built with Tailwind CSS, ShadCN components, and Framer Motion for animations.",
    "Date & Time Handling: Used date-fns for parsing, formatting, and displaying event schedules.",
    "Form Handling: Accessible and validated forms powered by React Hook Form.",
    "Backend REST API: Developed using Node.js, Express.js, Prisma ORM, and PostgreSQL.",
    "Error Management: Implemented centralized error handling for consistent API responses.",
    "Security Measures: bcrypt.js for password hashing.",
    "Team Collaboration: Built with GitHub project boards, structured commits, and proper pull request flow."
  ],
  "githubClientCode": "https://github.com/developersajadur/Next-Event-Client-Side",
  "githubServerCode": "https://github.com/developersajadur/Next-Event-Server-Side",
  "liveLink": "https://next-event-pro.vercel.app",
  "techStack": [
    "Next.js",
    "Tailwind CSS",
    "ShadCN UI",
    "Framer Motion",
     "Chatbot", 
     "Cloudinary",
    "NodeMailer",
    "bcrypt.js",
    "SSLCommerz",
    "Node.js",
    "Express.js",
    "Prisma",
    "PostgreSQL",
        "JWT Authentication"    
  ],
  "myLearnings": [
    "Improved team collaboration and coordination in a 4-member project setup.",
    "Enhanced time management and delivery under strict deadlines.",
    "Gained hands-on experience with GitHub project management, issue tracking, and code collaboration workflows.",
    " Improved my next js foundation knowledge and skill",
    "Learned effective team communication and task delegation under pressure.",
    "Encountered and solved new types of real-world errors during both frontend and backend development.",
    "Improved UI/UX design sense through iterative feedback and layout adjustments.",
    "Refined Global Error Handling in Backend.",
    "Refined understanding of scalable backend development using PostgreSQL and Prisma.",
    "Learned a lot backend architecture and integrations of third-party services like payment gateways and cloud storage."
  ]
},

{
  "projectId": "02",
  "projectName": "The Pencil Palace",
  "description": "The Pencil Palace is your ultimate destination for high-quality stationery and office supplies. Whether you're a student, artist, or professional, we've got everything you need to fuel your creativity and productivity. Our platform offers a seamless e-commerce experience, integrating cutting-edge technologies to provide a secure, optimized, and enjoyable shopping experience. Browse, shop, and manage your orders with ease, while administrators can efficiently manage products, orders, and users.",
  "features": [
    "Browse Without Login: Explore the Home Page, About Us, and Products freely.",
    "User Authentication: Sign Up / Log In with Firebase Auth, Forgot Password? Receive a secure reset link via email.",
    "Shopping Experience: View detailed product descriptions, add items to the cart, proceed to checkout, enter delivery details, and make payments via ShurjoPay.",
    "Order History: View past purchases.",
    "Admin Panel: Manage products, update orders, and manage users.",
    "404 Page for smooth navigation.",
    "Global Error Handling in Backend.",
    "Fixed API Response Structure for reliability.",
    "Image Storage: Cloudinary integration for secure and optimized image hosting.",
    "Frontend Optimization: react-image ensures faster loading & better quality.",
    "Secure JWT Authentication for backend security.",
    "Payment Gateway Integration: ShurjoPay for processing transactions.",
    "Security Measures: bcrypt.js for password hashing."
  ],
  "githubClientCode": "https://github.com/ZxAYED/the-pencil-palace-frontend",
  "githubServerCode": "https://github.com/ZxAYED/the-pencil-palace",
  "liveLink": "https://the-pencil-palace.netlify.app",
  "imageUrl": "https://res.cloudinary.com/dhl04adhz/image/upload/f_auto,q_auto/mp2rqchpnhy4ngr2qv6l",
  "techStack": [
    "React.js",
    "Redux Toolkit",
    "Tailwind CSS",
    "Firebase Authentication",
    "ShurjoPay",
    "Node.js",
    "Express.js",
    "MongoDB",
    "Mongoose",
    "Cloudinary",
    "NodeMailer",
    "bcrypt.js",
    "react-image",
    "JWT Authentication"
  ],
  "myLearnings": [
    "Built a fully functional e-commerce application solo, handling both frontend and backend development.",
    "Strengthened my expertise in Redux Toolkit by managing global state for authentication, cart, and admin workflows.",
      "Gained practical experience integrating ShurjoPay, a Bangladeshi payment gateway, for secure transaction processing.",
    "While working on this project, I also faced a lot of errors from using redux toolkit such as validating tags wasnt working wellm,while implementing a secure payment gateway using ShurjoPay i faced a lot of bugs from shurjopay that they are not consistant with their documentation. Also  I had to send alot of data to them to get the payment gateway working properly.",
    " I also had to fix the backend error handling and fix the API response structure.",
    "Mastered user authentication flows using Custom Authentication as well as Firebase Authentication, including password reset link send and route protection.",
    "Implemented dynamic admin controls with secure JWT-based access for managing products, users, and orders.",
    "Enhanced backend robustness with centralized error handling and a consistent API response structure.",
    "Learned to optimize performance with react-image for better image delivery and rendering efficiency.",
    "Successfully deployed frontend and backend with Netlify and Render, ensuring reliability and scalability.",
    "Deepened understanding of cloud services with Cloudinary for secure media storage and delivery.",
    "Refined solo project management skills including time planning, debugging, and iterative feature development."
  ]
},

  {
  "projectId": "03",
  "projectName": "Swifty Mail - A Team Project",
  "description": "Swifty Mail revolutionizes email management through its innovative approach to privacy and inbox organization. By offering disposable email addresses and a range of advanced features, Swifty Mail empowers users to navigate the digital landscape with confidence and ease. It solves real-time problems by providing users with temporary email addresses, reducing inbox clutter, and protecting against spam. Built by a passionate team, this project was a deep dive into email APIs, secure workflows, and productivity-enhancing features.",
  "features": [
    "Temporary Disposable Email: Instantly generate disposable email addresses for enhanced privacy and security using MailSlurp.",
    "Community and Forum Section: Access instant assistance and guidance on various website functionalities.",
    "Password Strength Checker: Evaluate and strengthen password security for premium users.",
    "IP Address Tracker: Obtain real-time information about online presence with a simple click.",
    "Notes Management System: Organize tasks and projects effortlessly with a Trello-like notes management system.",
    "Cloud Storage Service: Manage files and store data securely in the cloud for easy access.",
    "Role-Based System and Admin Panel: Comprehensive control for administrators over user management, article moderation, review management, and website statistics."
  ],
  "githubClientCode": "https://github.com/DeveloperAlihasan404439/Team-client-project",
  "githubServerCode": "https://github.com/DeveloperAlihasan404439/Team-server-project-",
  "liveLink": "https://swift-mail-5a7d7.web.app",
  "imageUrl": "https://res.cloudinary.com/dhl04adhz/image/upload/f_auto,q_auto/hwr3b2tn5vg44r0menck",
  "techStack": [
    "React.js",
    "Tailwind CSS",
    "Firebase Hosting",
    "Firebase CloudStorage",
    "MailSlurp API",
    "Node.js",
    "Express.js",
    "MongoDB",
    "JWT Authentication",
    "bcrypt.js"
  
  ],
  "myLearnings": [
    "Worked collaboratively on my first team project, improving communication, code sharing, and task distribution among members.",
    "Faced and resolved multiple real-world errors related to authentication, API usage, and secure access control.",
    "Explored various disposable email APIs and finalized MailSlurp as the most feature-rich and reliable option, offering free 60 emails per account.",
    "Integrated the MailSlurp API for temporary email generation, learning its request flows, limitations, and practical applications.",
    "Enhanced research and decision-making skills by comparing multiple APIs and third-party tools.",
    "Contributed to building a modular admin dashboard with real-time statistics and review moderation capabilities.",
    "Strengthened backend skills by implementing JWT authentication, secure routes, and role-based authorization.",
    "Learned how to manage cloud-based file uploads using Firebase Cloud Storage and deliver a more reliable UI experience.",
    "Had fun building a creative and privacy-focused platform, which sparked interest in exploring more API-powered project ideas."
  ]
}

]